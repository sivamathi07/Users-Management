{"ast":null,"code":"import axios from\"axios\";class UserService{// update employee task\nstatic async updateEmployeeTask(taskId,taskData,token){try{const response=await axios.put(\"\".concat(UserService.BASE_URL,\"/tasks/\").concat(taskId),taskData,{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(err){throw err;}}//newly created url mapping based on userID fetch the employee task\nstatic async fetchEmployeeTasksByuserId(token,userId){try{const response=await axios.get(\"\".concat(UserService.BASE_URL,\"/tasks/\").concat(userId),{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(err){throw err;}}static async login(email,password){try{const response=await axios.post(\"\".concat(UserService.BASE_URL,\"/auth/login\"),{email,password});return response.data;}catch(err){throw err;}}// Admin login anytime\nstatic async register(userData,token){try{const response=await axios.post(\"\".concat(UserService.BASE_URL,\"/auth/register\"),userData,{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(err){throw err;}}static async getAllUsers(token){try{const response=await axios.get(\"\".concat(UserService.BASE_URL,\"/admin/get-all-users\"),{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(err){throw err;}}static async getYourProfile(token){try{const response=await axios.get(\"\".concat(UserService.BASE_URL,\"/adminuser/get-profile\"),{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(err){throw err;}}static async getUserById(userId,token){try{const response=await axios.get(\"\".concat(UserService.BASE_URL,\"/admin/get-users/\").concat(userId),{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(err){throw err;}}static async deleteUser(userId,token){try{const response=await axios.delete(\"\".concat(UserService.BASE_URL,\"/admin/delete/\").concat(userId),{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(err){throw err;}}static async updateUser(userId,userData,token){try{const response=await axios.put(\"\".concat(UserService.BASE_URL,\"/admin/update/\").concat(userId),userData,{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(err){throw err;}}static async fetchEmployeeTasks(token){try{const response=await axios.get(\"\".concat(UserService.BASE_URL,\"/tasks\"),{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(err){throw err;}}static async createEmployeeTask(taskData,token){try{const response=await axios.post(\"\".concat(UserService.BASE_URL,\"/tasks\"),taskData,{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(err){throw err;}}static async setTaskDates(taskId,startDate,endDate,token){try{const response=await axios.post(\"\".concat(UserService.BASE_URL,\"/tasks/\").concat(taskId,\"/dates\"),{startDate,endDate},{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(err){throw err;}}static async approveEmployeeTask(taskId,token){// approve button\ntry{const response=await axios.put(\"\".concat(UserService.BASE_URL,\"/tasks/\").concat(taskId,\"/approve\"),{},{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(err){throw err;}}/**AUTHENTICATION CHECKER */static logout(){localStorage.removeItem('token');localStorage.removeItem('role');}static isAuthenticated(){const token=localStorage.getItem('token');return!!token;}static isAdmin(){const role=localStorage.getItem('role');return role==='ADMIN';}static isUser(){const role=localStorage.getItem('role');return role==='USER';}static adminOnly(){return this.isAuthenticated()&&this.isAdmin();}}UserService.BASE_URL=\"http://13.201.194.209:1010\";export default UserService;","map":{"version":3,"names":["axios","UserService","updateEmployeeTask","taskId","taskData","token","response","put","concat","BASE_URL","headers","Authorization","data","err","fetchEmployeeTasksByuserId","userId","get","login","email","password","post","register","userData","getAllUsers","getYourProfile","getUserById","deleteUser","delete","updateUser","fetchEmployeeTasks","createEmployeeTask","setTaskDates","startDate","endDate","approveEmployeeTask","logout","localStorage","removeItem","isAuthenticated","getItem","isAdmin","role","isUser","adminOnly"],"sources":["D:/Full Stack Project/Aura project/Aura Harks/Aura Harks/frontend/src/components/service/UserService.js"],"sourcesContent":["import axios from \"axios\";\n\nclass UserService{\n    static BASE_URL = \"http://13.201.194.209:1010\"\n\n    // update employee task\n    static async updateEmployeeTask(taskId, taskData, token) {\n        try {\n            const response = await axios.put(\n                `${UserService.BASE_URL}/tasks/${taskId}`,\n                taskData,\n                {\n                    headers: { Authorization: `Bearer ${token}` }\n                }\n            );\n            return response.data;\n        } catch (err) {\n            throw err;\n        }\n    }\n    \n\n      //newly created url mapping based on userID fetch the employee task\n      static async fetchEmployeeTasksByuserId(token, userId) {\n        try{\n          const response = await axios.get(`${UserService.BASE_URL}/tasks/${userId}`,{\n            headers: {Authorization: `Bearer ${token}`}\n        });\n        return response.data;\n          } catch(err) {\n              throw err;\n          }\n      }\n\n    static async login(email, password){\n        try{\n            const response = await axios.post(`${UserService.BASE_URL}/auth/login`, {email, password})\n            return response.data;\n\n        }catch(err){\n            throw err;\n        }\n    }\n    \n    // Admin login anytime\n   \n\n\n    static async register(userData, token){\n        try{\n            const response = await axios.post(`${UserService.BASE_URL}/auth/register`, userData, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async getAllUsers(token){\n        try{\n            const response = await axios.get(`${UserService.BASE_URL}/admin/get-all-users`, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n\n    static async getYourProfile(token){\n        try{\n            const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async getUserById(userId, token){\n        try{\n            const response = await axios.get(`${UserService.BASE_URL}/admin/get-users/${userId}`, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async deleteUser(userId, token){\n        try{\n            const response = await axios.delete(`${UserService.BASE_URL}/admin/delete/${userId}`, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n\n    static async updateUser(userId, userData, token){\n        try{\n            const response = await axios.put(`${UserService.BASE_URL}/admin/update/${userId}`, userData,\n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n   static async fetchEmployeeTasks(token) {\n    try {\n      const response = await axios.get(\n        `${UserService.BASE_URL}/tasks`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async createEmployeeTask(taskData, token) {\n    try {\n      const response = await axios.post(\n        `${UserService.BASE_URL}/tasks`,\n        taskData,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\nstatic async setTaskDates(taskId, startDate, endDate, token) {\n    try {\n      const response = await axios.post(\n        `${UserService.BASE_URL}/tasks/${taskId}/dates`,\n        { startDate, endDate },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n\n  static async approveEmployeeTask(taskId, token) { // approve button\n    try {\n        const response = await axios.put(\n            `${UserService.BASE_URL}/tasks/${taskId}/approve`,\n            {},\n            {\n                headers: { Authorization: `Bearer ${token}` }\n            }\n        );\n        return response.data;\n    } catch (err) {\n        throw err;\n    }\n}\n\n\n    /**AUTHENTICATION CHECKER */\n    static logout(){\n        localStorage.removeItem('token')\n        localStorage.removeItem('role')\n    }\n\n    static isAuthenticated(){\n        const token = localStorage.getItem('token')\n        return !!token\n    }\n\n    static isAdmin(){\n        const role = localStorage.getItem('role')\n        return role === 'ADMIN'\n    }\n\n    static isUser(){\n        const role = localStorage.getItem('role')\n        return role === 'USER'\n    }\n\n    static adminOnly(){\n        return this.isAuthenticated() && this.isAdmin();\n    }\n\n}\n\nexport default UserService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}