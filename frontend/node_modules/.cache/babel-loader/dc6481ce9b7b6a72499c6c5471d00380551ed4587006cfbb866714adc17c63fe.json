{"ast":null,"code":"// components/UserManagementPage.js\nimport React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import UserService from'../service/UserService';import\"./UserManagementPage.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function UserManagementPage(){const[users,setUsers]=useState([]);useEffect(()=>{// Fetch users data when the component mounts\nfetchUsers();},[]);const fetchUsers=async()=>{try{const token=localStorage.getItem('token');// Retrieve the token from localStorage\nconst response=await UserService.getAllUsers(token);//   console.log(response);\nsetUsers(response.ourUsersList);// Assuming the list of users is under the key 'ourUsersList'\n}catch(error){console.error('Error fetching users:',error);}};const deleteUser=async userId=>{try{// Prompt for confirmation before deleting the user\nconst confirmDelete=window.confirm('Are you sure you want to delete this user?');const token=localStorage.getItem('token');// Retrieve the token from localStorage\nif(confirmDelete){await UserService.deleteUser(userId,token);// After deleting the user, fetch the updated list of users\nfetchUsers();}}catch(error){console.error('Error deleting user:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"user-management-container\",children:[\" \",/*#__PURE__*/_jsxs(\"center\",{children:[\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Users Management Page \\xA0 \\xA0\",/*#__PURE__*/_jsxs(\"button\",{className:\"reg-button\",children:[\" \",/*#__PURE__*/_jsx(Link,{className:\"user-add\",to:\"/register\",children:\"Add User\"})]}),\" \"]}),/*#__PURE__*/_jsxs(\"table\",{className:\"user-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.id}),/*#__PURE__*/_jsx(\"td\",{children:user.name}),/*#__PURE__*/_jsx(\"td\",{children:user.email}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:()=>deleteUser(user.id),children:\"Delete\"}),\" \\xA0\",/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(Link,{className:\"user-update\",to:\"/update-user/\".concat(user.id),children:\"Update\"})})]})]},user.id))})]}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]})]});}export default UserManagementPage;","map":{"version":3,"names":["React","useState","useEffect","Link","UserService","jsx","_jsx","jsxs","_jsxs","UserManagementPage","users","setUsers","fetchUsers","token","localStorage","getItem","response","getAllUsers","ourUsersList","error","console","deleteUser","userId","confirmDelete","window","confirm","className","children","to","map","user","id","name","email","onClick","concat"],"sources":["D:/Full Stack Project/Aura project/Aura Harks/Aura Harks/frontend/src/components/userspage/UserManagementPage.jsx"],"sourcesContent":["// components/UserManagementPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserService from '../service/UserService';\nimport \"./UserManagementPage.css\";\n\nfunction UserManagementPage() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    // Fetch users data when the component mounts\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    try {\n\n      const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n      const response = await UserService.getAllUsers(token);\n      //   console.log(response);\n      setUsers(response.ourUsersList); // Assuming the list of users is under the key 'ourUsersList'\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n\n  const deleteUser = async (userId) => {\n    try {\n      // Prompt for confirmation before deleting the user\n      const confirmDelete = window.confirm('Are you sure you want to delete this user?');\n\n      const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n      if (confirmDelete) {\n        await UserService.deleteUser(userId, token);\n        // After deleting the user, fetch the updated list of users\n        fetchUsers();\n      }\n    } catch (error) {\n      console.error('Error deleting user:', error);\n    }\n  };\n\n  return (\n    <div className=\"user-management-container\"> <center> <br></br>\n      <h2>Users Management Page &nbsp; &nbsp;\n      <button className='reg-button'> <Link className='user-add' to=\"/register\">Add User</Link></button> </h2>\n      <table className='user-table'>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user => (\n            <tr key={user.id}>\n              <td>{user.id}</td>\n              <td>{user.name}</td>\n              <td>{user.email}</td>\n              <td>\n                <button className='delete-button' onClick={() => deleteUser(user.id)}>Delete</button> &nbsp;\n                <button><Link className='user-update' to={`/update-user/${user.id}`}>\n                  Update\n                </Link>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table> <br></br><br></br></center>\n    </div>\n  );\n}\n\nexport default UserManagementPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}