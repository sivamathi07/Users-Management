{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import UserService from\"../service/UserService\";import\"./EmployeeTask.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const EmployeeTask=()=>{const[tasks,setTasks]=useState([]);const[newTask,setNewTask]=useState({employeeName:\"\",task:\"\",activity:\"\",mon:0,tue:0,wed:0,thu:0,fri:0,sat:0,progress:\"\",startDate:\"\",endDate:\"\",status:\"pending\",// New field for task status\nourUsers:{id:\"\"}// Adding user id to the field\n});const[editTask,setEditTask]=useState(null);// edit task\nconst[profileInfo,setProfileInfo]=useState({});const[isRestrictedTime,setIsRestrictedTime]=useState(false);// time restriction\nuseEffect(()=>{fetchProfileInfo();//initial our userprofile verify rendering time\n},[]);//newly implement useeffect for ADMIN & USER employeetask list based on employee USERID\nuseEffect(()=>{if(profileInfo.role){checkTimeRestriction();// checking time\nif(!isRestrictedTime||profileInfo.role===\"ADMIN\"){if(profileInfo.role===\"ADMIN\"){fetchEmployeeAllTasks();}else{fetchEmployeeTasks(profileInfo.id);}}}},[profileInfo,isRestrictedTime]);const fetchProfileInfo=async()=>{try{const token=localStorage.getItem(\"token\");const response=await UserService.getYourProfile(token);setProfileInfo(response.ourUsers);setNewTask(prevTask=>({...prevTask,ourUsers:{id:response.ourUsers.id// Set userId in newTask\n}}));}catch(error){console.error(\"Error fetching profile information:\",error);}};const fetchEmployeeTasks=async userId=>{//based on userId to fetch the employeetaskslist\ntry{const token=localStorage.getItem(\"token\");const response=await UserService.fetchEmployeeTasksByuserId(token,userId);setTasks(response);}catch(error){console.error(\"Error fetching employee tasks:\",error);}};const fetchEmployeeAllTasks=async()=>{//Admin user fetchallemployeetasks list\ntry{const token=localStorage.getItem(\"token\");const response=await UserService.fetchEmployeeTasks(token);setTasks(response);}catch(error){console.error(\"Error fetching employee tasks:\",error);}};const handleEditTask=task=>{// handle edit task\nsetEditTask(task);};const handleUpdateTask=async()=>{// handle update task\ntry{const token=localStorage.getItem(\"token\");await UserService.updateEmployeeTask(editTask.id,editTask,token);setEditTask(null);if(profileInfo.role===\"ADMIN\"){fetchEmployeeAllTasks();}else{fetchEmployeeTasks(profileInfo.id);}}catch(error){console.error(\"Error updating employee task:\",error);}};const handleChange=e=>{const{name,value}=e.target;if(profileInfo.role!==\"ADMIN\"){if(editTask){setEditTask(prev=>({...prev,[name]:value}));}else{setNewTask(prev=>({...prev,[name]:value}));}}};const handleSubmit=async()=>{try{const token=localStorage.getItem(\"token\");const taskWithDates={...newTask};await UserService.createEmployeeTask(taskWithDates,token);if(profileInfo.role===\"ADMIN\"){//based on userId to submit task only admin can do this\nfetchEmployeeAllTasks();}else{fetchEmployeeTasks(profileInfo.id);}setNewTask({employeeName:\"\",task:\"\",activity:\"\",mon:0,tue:0,wed:0,thu:0,fri:0,sat:0,progress:\"\",startDate:\"\",endDate:\"\",status:\"pending\",ourUsers:{id:profileInfo.id// Reset to the current user's ID\n}});}catch(error){console.error(\"Error creating employee task:\",error);}};const handleClearAll=()=>{setNewTask({employeeName:\"\",task:\"\",activity:\"\",mon:0,tue:0,wed:0,thu:0,fri:0,sat:0,progress:\"\",startDate:\"\",endDate:\"\",status:\"pending\",ourUsers:{id:profileInfo.id// Reset to the current user's ID\n}});};const handleApproveTask=async taskId=>{try{const token=localStorage.getItem(\"token\");await UserService.approveEmployeeTask(taskId,token);if(profileInfo.role===\"ADMIN\"){//based on userID to approve task\nfetchEmployeeAllTasks();}else{fetchEmployeeTasks(profileInfo.id);}}catch(error){console.error(\"Error approving employee task:\",error);}};const checkTimeRestriction=()=>{const currentTime=new Date();const currentHour=currentTime.getHours();const restricted=currentHour>=23||currentHour<6;setIsRestrictedTime(restricted);};return/*#__PURE__*/_jsxs(\"div\",{className:\"employee-task-container\",children:[\" \",/*#__PURE__*/_jsxs(\"center\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Employee Tasks\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"emp-details\",children:[\" \",/*#__PURE__*/_jsxs(\"center\",{children:[\"Employee Name : \",profileInfo.name,\" \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 User ID : \",profileInfo.id,\" \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 User Role : \",profileInfo.role,\" \"]})]}),\" \",/*#__PURE__*/_jsx(\"br\",{}),isRestrictedTime&&profileInfo.role!==\"ADMIN\"?/*#__PURE__*/_jsx(\"p\",{children:\"Access to tasks is restricted between 11 PM and 6 AM. Please try again later.\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"table\",{className:\"employee-task-table\",border:\"1\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{nowrap:\"nowrap\",children:\"Employee Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Task\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Activity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Mon\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Tue\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Wed\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Thu\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Fri\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Sat\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Start Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"End Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Progress\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),\" \",profileInfo.role===\"ADMIN\"&&/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(_Fragment,{children:tasks.map((task,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:task.employeeName}),/*#__PURE__*/_jsx(\"td\",{nowrap:\"nowrap\",children:task.task}),/*#__PURE__*/_jsx(\"td\",{nowrap:\"nowrap\",children:task.activity}),/*#__PURE__*/_jsx(\"td\",{children:task.mon}),/*#__PURE__*/_jsx(\"td\",{children:task.tue}),/*#__PURE__*/_jsx(\"td\",{children:task.wed}),/*#__PURE__*/_jsx(\"td\",{children:task.thu}),/*#__PURE__*/_jsx(\"td\",{children:task.fri}),/*#__PURE__*/_jsx(\"td\",{children:task.sat}),/*#__PURE__*/_jsx(\"td\",{nowrap:\"nowrap\",children:task.startDate}),\" \",/*#__PURE__*/_jsx(\"td\",{nowrap:\"nowrap\",children:task.endDate}),/*#__PURE__*/_jsx(\"td\",{children:task.progress}),/*#__PURE__*/_jsx(\"td\",{children:task.status}),\" \",/*#__PURE__*/_jsxs(\"td\",{children:[profileInfo.role===\"ADMIN\"&&task.status===\"pending\"&&/*#__PURE__*/ // task status\n_jsx(\"button\",{className:\"employee-approve\",onClick:()=>handleApproveTask(task.id),children:\"Approve\"}),profileInfo.role!==\"ADMIN\"&&task.status===\"pending\"&&/*#__PURE__*/_jsx(\"button\",{className:\"employee-edit\",onClick:()=>handleEditTask(task),children:\"Edit\"})]})]},index))}),profileInfo.role!==\"ADMIN\"&&/*#__PURE__*/ // Admin user id can't enter the employee task details\n_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"employeeName\",value:editTask?editTask.employeeName:newTask.employeeName,onChange:handleChange,placeholder:\"Employee Name\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"task\",value:editTask?editTask.task:newTask.task,onChange:handleChange,placeholder:\"Task\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"activity\",value:editTask?editTask.activity:newTask.activity,onChange:handleChange,placeholder:\"Activity\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"mon\",value:editTask?editTask.mon:newTask.mon,onChange:handleChange,placeholder:\"Mon\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"tue\",value:editTask?editTask.tue:newTask.tue,onChange:handleChange,placeholder:\"Tue\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"wed\",value:editTask?editTask.wed:newTask.wed,onChange:handleChange,placeholder:\"Wed\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"thu\",value:editTask?editTask.thu:newTask.thu,onChange:handleChange,placeholder:\"Thu\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"fri\",value:editTask?editTask.fri:newTask.fri,onChange:handleChange,placeholder:\"Fri\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"sat\",value:editTask?editTask.sat:newTask.sat,onChange:handleChange,placeholder:\"Sat\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"date\"// start date implementation\n,id:\"startDate\",name:\"startDate\",value:editTask?editTask.startDate:newTask.startDate,onChange:handleChange,placeholder:\"yyyy-mm-dd\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"date\"// end date implementation\n,id:\"endDate\",name:\"endDate\",value:editTask?editTask.endDate:newTask.endDate,onChange:handleChange,placeholder:\"yyyy-mm-dd\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"progress\",value:editTask?editTask.progress:newTask.progress,onChange:handleChange,placeholder:\"Progress\"})}),/*#__PURE__*/_jsx(\"td\",{children:editTask?editTask.status:newTask.status}),\" \"]})]})]}),profileInfo.role!==\"ADMIN\"&&/*#__PURE__*/ //submit & clear button visible only USERS\n_jsxs(\"div\",{className:\"button-container\",children:[editTask?/*#__PURE__*/_jsx(\"button\",{className:\"button-submit\",onClick:handleUpdateTask,children:\"Update\"}):/*#__PURE__*/_jsx(\"button\",{className:\"button-submit\",onClick:handleSubmit,children:\"Add Task\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button-clearall\",onClick:handleClearAll,children:\"Clear All\"})]})]}),\" \"]})]});};export default EmployeeTask;","map":{"version":3,"names":["React","useState","useEffect","UserService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EmployeeTask","tasks","setTasks","newTask","setNewTask","employeeName","task","activity","mon","tue","wed","thu","fri","sat","progress","startDate","endDate","status","ourUsers","id","editTask","setEditTask","profileInfo","setProfileInfo","isRestrictedTime","setIsRestrictedTime","fetchProfileInfo","role","checkTimeRestriction","fetchEmployeeAllTasks","fetchEmployeeTasks","token","localStorage","getItem","response","getYourProfile","prevTask","error","console","userId","fetchEmployeeTasksByuserId","handleEditTask","handleUpdateTask","updateEmployeeTask","handleChange","e","name","value","target","prev","handleSubmit","taskWithDates","createEmployeeTask","handleClearAll","handleApproveTask","taskId","approveEmployeeTask","currentTime","Date","currentHour","getHours","restricted","className","children","border","nowrap","map","index","onClick","type","onChange","placeholder"],"sources":["D:/Full Stack Project/Aura project/Aura Harks/Aura Harks/frontend/src/components/userspage/EmployeeTask.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport UserService from \"../service/UserService\";\r\nimport \"./EmployeeTask.css\";\r\n\r\nconst EmployeeTask = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState({\r\n    employeeName: \"\",\r\n    task: \"\",\r\n    activity: \"\",\r\n    mon: 0,\r\n    tue: 0,\r\n    wed: 0,\r\n    thu: 0,\r\n    fri: 0,\r\n    sat: 0,\r\n    progress: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    status: \"pending\", // New field for task status\r\n    ourUsers:{\r\n      id: \"\"\r\n     } // Adding user id to the field\r\n  });\r\n  \r\n  const [editTask, setEditTask] = useState(null); // edit task\r\n  const [profileInfo, setProfileInfo] = useState({});\r\n  const [isRestrictedTime, setIsRestrictedTime] = useState(false); // time restriction\r\n\r\n  useEffect(() => {\r\n    fetchProfileInfo(); //initial our userprofile verify rendering time\r\n  }, []);\r\n\r\n  //newly implement useeffect for ADMIN & USER employeetask list based on employee USERID\r\n  useEffect(() => {\r\n    if (profileInfo.role) {\r\n\r\n      checkTimeRestriction(); // checking time\r\n      if (!isRestrictedTime || profileInfo.role === \"ADMIN\") {\r\n\r\n      if (profileInfo.role === \"ADMIN\") {\r\n        fetchEmployeeAllTasks();\r\n      } else {\r\n        fetchEmployeeTasks(profileInfo.id);\r\n      }\r\n    }\r\n  }\r\n  }, [profileInfo, isRestrictedTime]);\r\n\r\n  const fetchProfileInfo = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await UserService.getYourProfile(token);\r\n      setProfileInfo(response.ourUsers);\r\n\r\n      setNewTask((prevTask) => ({\r\n        ...prevTask,\r\n        ourUsers:{\r\n          id : response.ourUsers.id // Set userId in newTask\r\n        }\r\n      }));\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching profile information:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchEmployeeTasks = async (userId) => {   //based on userId to fetch the employeetaskslist\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await UserService.fetchEmployeeTasksByuserId(token, userId);\r\n      setTasks(response);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employee tasks:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchEmployeeAllTasks = async () => {   //Admin user fetchallemployeetasks list\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await UserService.fetchEmployeeTasks(token);\r\n      setTasks(response);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employee tasks:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditTask = (task) => {  // handle edit task\r\n    setEditTask(task);\r\n  };\r\n\r\n  const handleUpdateTask = async () => {  // handle update task\r\n    try {\r\n        const token = localStorage.getItem(\"token\");\r\n        await UserService.updateEmployeeTask(editTask.id, editTask, token);\r\n        setEditTask(null);\r\n\r\n        if (profileInfo.role === \"ADMIN\") {\r\n            fetchEmployeeAllTasks();\r\n        } else {\r\n            fetchEmployeeTasks(profileInfo.id);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error updating employee task:\", error);\r\n    }\r\n};\r\n\r\nconst handleChange = (e) => {\r\n  const { name, value } = e.target;\r\n  if (profileInfo.role !== \"ADMIN\") {\r\n      if (editTask) {\r\n          setEditTask((prev) => ({\r\n              ...prev,\r\n              [name]: value,\r\n          }));\r\n      } else {\r\n          setNewTask((prev) => ({\r\n              ...prev,\r\n              [name]: value,\r\n          }));\r\n      }\r\n  }\r\n};\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const taskWithDates = { ...newTask };\r\n\r\n      await UserService.createEmployeeTask(taskWithDates, token);\r\n\r\n      if (profileInfo.role === \"ADMIN\") {  //based on userId to submit task only admin can do this\r\n        fetchEmployeeAllTasks(); \r\n      } else {\r\n        fetchEmployeeTasks(profileInfo.id);\r\n      }\r\n\r\n      setNewTask({\r\n        employeeName: \"\",\r\n        task: \"\",\r\n        activity: \"\",\r\n        mon: 0,\r\n        tue: 0,\r\n        wed: 0,\r\n        thu: 0,\r\n        fri: 0,\r\n        sat: 0,\r\n        progress: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        status: \"pending\",\r\n        ourUsers: {\r\n          id: profileInfo.id // Reset to the current user's ID\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error creating employee task:\", error);\r\n    }\r\n  };\r\n\r\n  const handleClearAll = () => {\r\n    setNewTask({\r\n      employeeName: \"\",\r\n      task: \"\",\r\n      activity: \"\",\r\n      mon: 0,\r\n      tue: 0,\r\n      wed: 0,\r\n      thu: 0,\r\n      fri: 0,\r\n      sat: 0,\r\n      progress: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      status: \"pending\",\r\n      ourUsers: {\r\n        id: profileInfo.id // Reset to the current user's ID\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleApproveTask = async (taskId) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await UserService.approveEmployeeTask(taskId, token);\r\n      if (profileInfo.role === \"ADMIN\") {        //based on userID to approve task\r\n        fetchEmployeeAllTasks();\r\n      } else {\r\n        fetchEmployeeTasks(profileInfo.id);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error approving employee task:\", error);\r\n    }\r\n  };\r\n\r\n  const checkTimeRestriction = () => {\r\n    const currentTime = new Date();\r\n    const currentHour = currentTime.getHours();\r\n    const restricted = currentHour >= 23 || currentHour < 6;\r\n    setIsRestrictedTime(restricted);\r\n  };\r\n  \r\n  return ( \r\n    <div className=\"employee-task-container\"> <center>\r\n      <h1>Employee Tasks</h1> \r\n      <p className=\"emp-details\"> <center>\r\n         Employee Name : {profileInfo.name} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n         User ID : {profileInfo.id} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n         User Role : {profileInfo.role} </center></p> <br></br> \r\n      \r\n         {isRestrictedTime && profileInfo.role !== \"ADMIN\" ? (\r\n        <p>Access to tasks is restricted between 11 PM and 6 AM. Please try again later.</p>\r\n      ) : (\r\n      \r\n        <>\r\n      <table className=\"employee-task-table\" border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th nowrap = \"nowrap\">Employee Name</th>\r\n            <th>Task</th>\r\n            <th>Activity</th>\r\n            <th>Mon</th>\r\n            <th>Tue</th>\r\n            <th>Wed</th>\r\n            <th>Thu</th>\r\n            <th>Fri</th>\r\n            <th>Sat</th>\r\n            <th>Start Date</th>\r\n            <th>End Date</th>\r\n            <th>Progress</th>\r\n            <th>Status</th> {/* New column for task status */}\r\n            {profileInfo.role === \"ADMIN\" && <th>Action</th>}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* {profileInfo.role === \"ADMIN\" && showTable && ( */}\r\n            <>\r\n              {tasks.map((task, index) => (\r\n                <tr key={index}>\r\n                  <td>{task.employeeName}</td>\r\n                  <td nowrap = \"nowrap\">{task.task}</td>\r\n                  <td nowrap = \"nowrap\">{task.activity}</td>\r\n                  <td>{task.mon}</td>\r\n                  <td>{task.tue}</td>\r\n                  <td>{task.wed}</td>\r\n                  <td>{task.thu}</td>\r\n                  <td>{task.fri}</td>\r\n                  <td>{task.sat}</td>\r\n                  <td nowrap = \"nowrap\">{task.startDate}</td> {/*no wrap single line data*/}\r\n                  <td nowrap = \"nowrap\">{task.endDate}</td>\r\n                  <td>{task.progress}</td>\r\n                  <td>{task.status}</td> {/* Display task status */}\r\n                  <td>\r\n                    {profileInfo.role === \"ADMIN\" && task.status === \"pending\" &&( // task status\r\n                      <button className='employee-approve' onClick={() => handleApproveTask(task.id)}>\r\n                        Approve\r\n                      </button>\r\n                    )}\r\n                   \r\n                   {profileInfo.role !== \"ADMIN\" && task.status === \"pending\" && (\r\n                      <button className='employee-edit' onClick={() => handleEditTask(task)}>\r\n                        Edit\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </>\r\n          {profileInfo.role !==\"ADMIN\" && ( // Admin user id can't enter the employee task details\r\n          <tr>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                name=\"employeeName\"\r\n                value={editTask ? editTask.employeeName : newTask.employeeName}\r\n                onChange={handleChange}\r\n                placeholder=\"Employee Name\"\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                name=\"task\"\r\n                value={editTask ? editTask.task : newTask.task}\r\n                onChange={handleChange}\r\n                placeholder=\"Task\"\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                name=\"activity\"\r\n                value={editTask ? editTask.activity : newTask.activity}\r\n                onChange={handleChange}\r\n                placeholder=\"Activity\"\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                name=\"mon\"\r\n                value={editTask ? editTask.mon : newTask.mon}\r\n                onChange={handleChange}\r\n                placeholder=\"Mon\"\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                name=\"tue\"\r\n                value={editTask ? editTask.tue : newTask.tue}\r\n                onChange={handleChange}\r\n                placeholder=\"Tue\"\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                name=\"wed\"\r\n                value={editTask ? editTask.wed : newTask.wed}\r\n                onChange={handleChange}\r\n                placeholder=\"Wed\"\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                name=\"thu\"\r\n                value={editTask ? editTask.thu : newTask.thu}\r\n                onChange={handleChange}\r\n                placeholder=\"Thu\"\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                name=\"fri\"\r\n                value={editTask ? editTask.fri : newTask.fri}\r\n                onChange={handleChange}\r\n                placeholder=\"Fri\"\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                name=\"sat\"\r\n                value={editTask ? editTask.sat : newTask.sat}\r\n                onChange={handleChange}\r\n                placeholder=\"Sat\"\r\n              />\r\n            </td>\r\n\r\n            <td>\r\n            <input\r\n              type=\"date\"         // start date implementation\r\n              id=\"startDate\"\r\n              name=\"startDate\"\r\n              value={editTask ? editTask.startDate : newTask.startDate}\r\n              onChange={handleChange}\r\n              placeholder=\"yyyy-mm-dd\"\r\n            />    \r\n            </td>\r\n            \r\n            <td>\r\n            <input\r\n              type=\"date\"     // end date implementation\r\n              id=\"endDate\"\r\n              name=\"endDate\"\r\n              value={editTask ? editTask.endDate : newTask.endDate}\r\n              onChange={handleChange}\r\n              placeholder=\"yyyy-mm-dd\"\r\n            />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                name=\"progress\"\r\n                value={editTask ? editTask.progress : newTask.progress}\r\n                onChange={handleChange}\r\n                placeholder=\"Progress\"\r\n              />\r\n            </td>\r\n            <td>{editTask ? editTask.status : newTask.status}</td> {/* Display status for new task */}\r\n          </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      {profileInfo.role !== \"ADMIN\" &&(   //submit & clear button visible only USERS\r\n      <div className=\"button-container\">\r\n        \r\n        {editTask ? (\r\n          <button className='button-submit' onClick={handleUpdateTask}>Update</button>\r\n            ) : (\r\n          <button className='button-submit' onClick={handleSubmit}>Add Task</button>\r\n        )}\r\n\r\n        <button  className='button-clearall' onClick={handleClearAll}>Clear All</button>\r\n      </div>\r\n      )}\r\n      </>\r\n      )} </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeTask;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}